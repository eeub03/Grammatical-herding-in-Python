

PARAMETERS

{
    "HERD_SIZE": 700,
    "ITERATIONS": 400,
    "NUMBER_OF_BETAS": 20,
    "NUMBER_OF_ALPHAS": 5,
    "WANDER": 10,
    "NUMBER_OF_CODONS": 20,
    "CODON_SIZE": 8,
    "TARGET_FITNESS": 100,
    "GRAMMAR_FILE": "grammars/SFT2.pybnf",
    "MAX_TREE_DEPTH": null,
    "MAX_WRAPS": 10,
    "MULTICORE": false,
    "CORES": 12,
    "SEED_INDIVIDUALS": [],
    "FITNESS_FUNCTION": "sft",
    "TARGET": "Hello world!",
    "MAX_INIT_TREE_DEPTH": 10,
    "MIN_INIT_TREE_DEPTH": null,
    "PERMUTATION_RAMPS": 5,
    "MAX_STEPS": 900,
    "BNF": "{'{::}': ['<code>', '<opcode>'], 'if self.is_food_ahead(): {:': ['<condition>'], ':}else: {:': ['<condition>'], ':}': ['<condition>'], 'self.left()': ['<op>'], 'self.right()': ['<op>'], 'self.move()': ['<op>']} {'<prog>': {'id': '<prog>', 'min_steps': 4, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<code>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'b_factor': 1, 'min_path': [{'choice': [{'symbol': '<code>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}]}, '<code>': {'id': '<code>', 'min_steps': 3, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<line>', 'type': 'NT', 'min_steps': 2, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<code>', 'type': 'NT', 'min_steps': 3, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<line>', 'type': 'NT', 'min_steps': 2, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<line>', 'type': 'NT', 'min_steps': 2, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 2}]}, '<line>': {'id': '<line>', 'min_steps': 2, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<condition>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<op>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}]}, '<condition>': {'id': '<condition>', 'min_steps': 3, 'expanded': True, 'recursive': [{'choice': [{'symbol': 'if self.is_food_ahead(): {:', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ':}else: {:', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ':}', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}], 'b_factor': 1, 'min_path': [{'choice': [{'symbol': 'if self.is_food_ahead(): {:', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ':}else: {:', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ':}', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}]}, '<op>': {'id': '<op>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 3, 'min_path': [{'choice': [{'symbol': 'self.left()', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'self.right()', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'self.move()', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}, '<opcode>': {'id': '<opcode>', 'min_steps': 2, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<op>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<op>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}]}} {'<prog>': {'choices': [{'choice': [{'symbol': '<code>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'no_choices': 1}, '<code>': {'choices': [{'choice': [{'symbol': '<line>', 'type': 'NT', 'min_steps': 2, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<code>', 'type': 'NT', 'min_steps': 3, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<line>', 'type': 'NT', 'min_steps': 2, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'no_choices': 2}, '<line>': {'choices': [{'choice': [{'symbol': '<condition>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}, {'choice': [{'symbol': '<op>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}], 'no_choices': 2}, '<condition>': {'choices': [{'choice': [{'symbol': 'if self.is_food_ahead(): {:', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ':}else: {:', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ':}', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}], 'no_choices': 1}, '<op>': {'choices': [{'choice': [{'symbol': 'self.left()', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'self.right()', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'self.move()', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 3}, '<opcode>': {'choices': [{'choice': [{'symbol': '<op>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<opcode>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<op>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}], 'no_choices': 2}} {'symbol': '<prog>', 'type': 'NT'}"
}

STATISTICS

{
    "alphas_fitness": [
        30.4,
        36.6,
        37.4,
        38.8,
        40.4,
        41.6,
        41.6,
        42.8,
        43.2,
        44.4,
        44.4,
        44.6,
        48.0,
        48.4,
        48.4,
        48.4,
        48.4,
        48.4,
        48.4,
        48.4,
        48.4,
        48.6,
        48.6,
        48.6,
        48.6,
        48.6,
        48.6,
        52.0,
        52.0,
        52.0,
        52.0,
        52.0,
        52.0,
        52.0,
        52.0,
        53.2,
        53.2,
        55.8,
        55.8,
        55.8,
        59.8,
        59.8,
        59.8,
        59.8,
        59.8,
        59.8,
        59.8,
        60.0,
        60.0,
        60.0,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        61.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        62.6,
        67.6,
        68.2,
        68.2,
        68.2,
        68.2,
        68.2,
        68.2,
        68.2,
        68.2,
        68.4,
        68.4,
        68.4,
        68.4,
        68.4,
        68.4,
        68.4,
        68.4,
        68.4,
        68.4,
        69.0,
        69.0,
        69.0,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        71.6,
        72.8,
        72.8,
        72.8,
        72.8,
        72.8,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        75.6,
        78.0,
        78.0,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        81.2,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        83.0,
        84.0,
        84.0,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        84.8,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0,
        85.0
    ],
    "average_fitness": 37.26571428571429,
    "best_fitness": 85,
    "best_fitness_iteration": 180,
    "best_fitness_list": [
        36,
        41,
        41,
        41,
        43,
        43,
        43,
        46,
        46,
        47,
        47,
        47,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        54,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        63,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        69,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        84,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85,
        85
    ],
    "best_iteration_fitness": 0,
    "best_phenotype": "if self.is_food_ahead(): \n  self.left()\nelse: \n  self.right()\n  self.right()\nif self.is_food_ahead(): \n  self.move()\nelse: \n  self.right()\n  self.move()\n  self.right()",
    "best_steps": 900,
    "generation": 400,
    "herd_movement": 425,
    "last_gen_improvement": 400,
    "last_generation_improvement": 180,
    "number_of_invalids": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
    ]
}